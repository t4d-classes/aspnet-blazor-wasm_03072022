@page "/car-tool"

<ToolHeader HeaderText="Car Tool" />

<CarTable Cars="@cars" EditCarId="@editCarId"
  OnEditCar="@editCar" OnDeleteCar="@deleteCar"
  OnSaveCar="@saveCar" OnCancelCar="@cancelCar" />

<CarForm ButtonText="Add Car"
  OnSubmitCarForm="@addCar" />

<ToolFooter CompanyName="A Cool Company LLC" />
  
@code {

  // Model Data / State Data

  // persistent data
  private List<ICar> cars = new() {
    new Car() {
      Id = 1, Make = "Tesla", Model = "S",
      Year = 2020, Color = "blue", Price = 120000 },
    new Car() {
      Id = 2, Make = "Tesla", Model = "3",
      Year = 2019, Color = "red", Price = 45000 },
  };

  // temporary data
  private int editCarId = -1;

  private void editCar(int carId)
  {
    editCarId = carId;
  }

  private void cancelCar()
  {
    editCarId = -1;
  }  

  private void addCar(INewCar car)
  {
    cars.Add(new Car() {
      Id = cars.Any() ? cars.Max(c => c.Id) + 1 : 1,
      Make = car.Make,
      Model = car.Model,
      Year = car.Year,
      Color = car.Color,
      Price = car.Price,
    });
    editCarId = -1;
  }

  private void deleteCar(int carId)
  {
    var carIndex = cars.FindIndex(c => c.Id == carId);
    cars.RemoveAt(carIndex);
    editCarId = -1;
  }

  private void saveCar(ICar car)
  {
    var carIndex = cars.FindIndex(c => c.Id == car.Id);
    cars[carIndex] = car;
    editCarId = -1;
  }  

}
