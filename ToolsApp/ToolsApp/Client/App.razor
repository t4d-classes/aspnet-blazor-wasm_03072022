@using System.Reflection
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using Microsoft.Extensions.Logging
@inject LazyAssemblyLoader AssemblyLoader
@inject ILogger<App> Logger

<Router AppAssembly="@typeof(App).Assembly" AdditionalAssemblies="@lazyLoadedAssemblies"
  OnNavigateAsync="@OnNavigateAsync">
  <Found Context="routeData">
    <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    <FocusOnNavigate RouteData="@routeData" Selector="h1" />
  </Found>
  <NotFound>
    <PageTitle>Not found</PageTitle>
    <LayoutView Layout="@typeof(MainLayout)">
      <p role="alert">Sorry, there's nothing at this address.</p>
    </LayoutView>
  </NotFound>
</Router>

@code {
  private List<Assembly> lazyLoadedAssemblies = new();

  private async Task OnNavigateAsync(NavigationContext args)
  {
    try
    {
      System.Console.WriteLine(args.Path);
      if (args.Path == "car-tool")
      {
        var assemblies = await AssemblyLoader.LoadAssembliesAsync(
        new[] { "ToolsApp.Components.CarTool.dll" });
        lazyLoadedAssemblies.AddRange(assemblies);
      }

      if (args.Path == "color-tool")
      {
        var assemblies = await AssemblyLoader.LoadAssembliesAsync(
        new[] { "ToolsApp.Components.ColorTool.dll" });
        lazyLoadedAssemblies.AddRange(assemblies);
      }
    }
    catch (Exception ex)
    {
      Logger.LogError("Error: {Message}", ex.Message);
    }
  }
}
